decl
	integer m;
	integer factorial(integer k;);
	integer swap(integer &a,&b;);
	integer marx(integer &m;);
	integer karl(integer &k;);
	integer kara[3];
enddecl

integer factorial(integer k;) {
	decl
		integer n;
	enddecl
	begin	
		if (k==1) then
			n=1;
		else
			n = k * factorial(k-1);
		endif;
		return n;
	end
}

integer marx(integer &m;) {
	decl
	enddecl
	begin
		m = 40;
		return 0;
	end
}

integer karl(integer &k;) {
	decl
	enddecl
	begin
		return marx(k);
	end
}

integer swap(integer &a,&b;) {
	decl
	enddecl
	begin
		a = a + b;
		b = a - b;
		a = a - b;
		return 0;
	end
}

integer main() {
	decl
		integer k,a,b;
	enddecl
	begin	
		a = 7;
		b = 17;
		write(a);
		write(b);
		k = swap(a,b);
		write(a);
		write(b);
		k=factorial(6);
		write(k);
		a = karl(k);
		write(k);
		kara[0]=0;
		kara[1]=1;
		kara[2]=2;
		kara[1] = karl(kara[2]);
		write(kara[1]);
		write(kara[2]);
		return 0;
	end
}
